services:
  client:
    build:
      context: ./frontend/react-client
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    build:
      context: ./backend
      dockerfile: Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ALLOWED_ORIGINS=http://client:3000,http://client:80,https://client:443,https://client:3000
      - CONNECTION_STRING=Host=database;Port=5432;Database=reguan_db;Username=postgres;Password=postgres
    depends_on:
      - database
    ports:
      - "8080"
      - "8081"

  seed-admin-tool:
    build:
      context: ./backend
      dockerfile: SeedAdminTool/Dockerfile
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=Host=database;Port=5432;Database=reguan_db;Username=postgres;Password=postgres
    stdin_open: true
    tty: true

  database:
    image: postgis/postgis:16-3.5-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reguan_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d reguan_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./reguan_db.sql:/docker-entrypoint-initdb.d/reguan_db.sql
    ports:
      - "5432:5432"